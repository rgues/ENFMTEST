{"ast":null,"code":"import { GET_REQUESTS, GET_ASSIGNATIONS, GET_CATEGORIES, GET_REQUEST_ANSWERS, GET_USERS } from '../store/types';\nimport { format } from \"date-fns\";\nexport default {\n  name: 'RequestResponsesComponent',\n  async created() {\n    this.categories = await this.$store.dispatch(GET_CATEGORIES);\n    this.users = await this.$store.dispatch(GET_USERS);\n    this.requests = await this.$store.dispatch(GET_REQUESTS);\n    this.assignations = await this.$store.dispatch(GET_ASSIGNATIONS);\n    this.answers = await this.$store.dispatch(GET_REQUEST_ANSWERS, this.$route.params.id);\n    console.log(this.assignations);\n  },\n  data() {\n    return {\n      categories: [],\n      users: [],\n      requests: [],\n      assignations: [],\n      answers: [],\n      currentUser: this.$store.state.user.loginData.user,\n      loading: false\n    };\n  },\n  methods: {\n    categoryName(id) {\n      return this.categories.filter(item => item.id === id).map(item => item ? item.name : '')[0];\n    },\n    request(id) {\n      return this.requests.find(item => item.id === id);\n    },\n    assignation(id) {\n      return this.assignations.find(item => parseInt(item.id) === parseInt(id));\n    },\n    formatDate(date) {\n      return format(date, \"yyyy-MM-dd\");\n    }\n  }\n};","map":{"version":3,"names":["GET_REQUESTS","GET_ASSIGNATIONS","GET_CATEGORIES","GET_REQUEST_ANSWERS","GET_USERS","format","name","created","categories","$store","dispatch","users","requests","assignations","answers","$route","params","id","console","log","data","currentUser","state","user","loginData","loading","methods","categoryName","filter","item","map","request","find","assignation","parseInt","formatDate","date"],"sources":["C:\\Users\\HP\\Desktop\\Etisalat\\client\\src\\modules\\RequestResponses.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container mt-5\">\r\n    <div className=\"admin_table\">\r\n      <table class=\"table\" >\r\n        <thead>\r\n          <tr class=\"table-secondary\">\r\n            <th scope=\"col\">Ticket</th>\r\n            <th scope=\"col\">Category</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Comment</th>\r\n            <th scope=\"col\">Response</th>\r\n             <th scope=\"col\">IT</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           <tr class=\"table-light\" v-for=\"item in answers\" :key=\"item.id\" >\r\n\r\n                    <td>\r\n                      {{ assignation(item.assignation_id) ? request(assignation(item.assignation_id).request_id) : '' ? request(assignation(item.assignation_id).request_id).title : ''}}\r\n                    </td>\r\n                    <td>\r\n                        <span class=\"fw-bold\" >\r\n                            {{ assignation(item.assignation_id) ? categoryName(request(assignation(item.assignation_id).request_id).category_id) : '' ? categoryName(request(assignation(item.assignation_id).request_id).category_id) : '' }}\r\n                        </span>\r\n                    </td>\r\n                   \r\n                    <td>\r\n                        {{ assignation(item.assignation_id) ? request(assignation(item.assignation_id).request_id) : '' ? request(assignation(item.assignation_id).request_id).description : ''}}\r\n                    </td>\r\n                    <td>\r\n                      <span :class=\"{'badge bg-danger':item.state==='in_approval','badge bg-success':item.state==='approve' }\">\r\n                        {{item.state}}\r\n                      </span> \r\n                      </td>\r\n                    <td>\r\n                        <span class=\"fs-6\" >\r\n                            {{assignation(item.assignation_id) ? assignation(item.assignation_id).comment : ''}}\r\n                        </span>\r\n                    </td>\r\n\r\n                     <td>{{item.description ? item.description : ''}}</td>\r\n\r\n                    <td>{{item.name ? item.name : '' }}</td>\r\n                  \r\n                  \r\n                    <td>{{ item.date_answer ? formatDate(item.date_answer) : ''}}</td>\r\n              \r\n               </tr> \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { GET_REQUESTS,GET_ASSIGNATIONS, GET_CATEGORIES,GET_REQUEST_ANSWERS,GET_USERS} from '../store/types';\r\nimport { format } from \"date-fns\";\r\n\r\nexport default { \r\n  \r\n    name:'RequestResponsesComponent',\r\n    async created() { \r\n       this.categories = await this.$store.dispatch(GET_CATEGORIES);\r\n       this.users = await this.$store.dispatch(GET_USERS);\r\n       this.requests = await this.$store.dispatch(GET_REQUESTS);\r\n       this.assignations = await this.$store.dispatch(GET_ASSIGNATIONS);\r\n       this.answers = await this.$store.dispatch(GET_REQUEST_ANSWERS,this.$route.params.id);\r\n       console.log(this.assignations);\r\n    },\r\n    data() {\r\n        return {  \r\n            categories : [],\r\n            users: [],\r\n            requests : [],\r\n            assignations:[],\r\n            answers:[],\r\n            currentUser: this.$store.state.user.loginData.user,\r\n            loading:false\r\n        }\r\n    },\r\n    methods : {\r\n        categoryName(id) {\r\n           return this.categories.filter(item => item.id === id).map(item=>item ? item.name : '')[0];\r\n        },\r\n         request(id) {\r\n           return this.requests.find(item => item.id === id);\r\n        }\r\n        ,\r\n         assignation(id) {\r\n           return this.assignations.find(item => parseInt(item.id) === parseInt(id));\r\n        }\r\n       ,\r\n       \r\n        formatDate(date) {\r\n                return format(date,\"yyyy-MM-dd\");\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"AA0DA,SAASA,YAAY,EAACC,gBAAgB,EAAEC,cAAc,EAACC,mBAAmB,EAACC,SAAS,QAAO,gBAAgB;AAC3G,SAASC,MAAK,QAAS,UAAU;AAEjC,eAAe;EAEXC,IAAI,EAAC,2BAA2B;EAChC,MAAMC,OAAOA,CAAA,EAAG;IACb,IAAI,CAACC,UAAS,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACR,cAAc,CAAC;IAC5D,IAAI,CAACS,KAAI,GAAI,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAACN,SAAS,CAAC;IAClD,IAAI,CAACQ,QAAO,GAAI,MAAM,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACV,YAAY,CAAC;IACxD,IAAI,CAACa,YAAW,GAAI,MAAM,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAACT,gBAAgB,CAAC;IAChE,IAAI,CAACa,OAAM,GAAI,MAAM,IAAI,CAACL,MAAM,CAACC,QAAQ,CAACP,mBAAmB,EAAC,IAAI,CAACY,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACpFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAAC;EACjC,CAAC;EACDO,IAAIA,CAAA,EAAG;IACH,OAAO;MACHZ,UAAS,EAAI,EAAE;MACfG,KAAK,EAAE,EAAE;MACTC,QAAO,EAAI,EAAE;MACbC,YAAY,EAAC,EAAE;MACfC,OAAO,EAAC,EAAE;MACVO,WAAW,EAAE,IAAI,CAACZ,MAAM,CAACa,KAAK,CAACC,IAAI,CAACC,SAAS,CAACD,IAAI;MAClDE,OAAO,EAAC;IACZ;EACJ,CAAC;EACDC,OAAM,EAAI;IACNC,YAAYA,CAACV,EAAE,EAAE;MACd,OAAO,IAAI,CAACT,UAAU,CAACoB,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACZ,EAAC,KAAMA,EAAE,CAAC,CAACa,GAAG,CAACD,IAAI,IAAEA,IAAG,GAAIA,IAAI,CAACvB,IAAG,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IACAyB,OAAOA,CAACd,EAAE,EAAE;MACV,OAAO,IAAI,CAACL,QAAQ,CAACoB,IAAI,CAACH,IAAG,IAAKA,IAAI,CAACZ,EAAC,KAAMA,EAAE,CAAC;IACpD;IAECgB,WAAWA,CAAChB,EAAE,EAAE;MACd,OAAO,IAAI,CAACJ,YAAY,CAACmB,IAAI,CAACH,IAAG,IAAKK,QAAQ,CAACL,IAAI,CAACZ,EAAE,MAAMiB,QAAQ,CAACjB,EAAE,CAAC,CAAC;IAC5E;IAGAkB,UAAUA,CAACC,IAAI,EAAE;MACT,OAAO/B,MAAM,CAAC+B,IAAI,EAAC,YAAY,CAAC;IACxC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}