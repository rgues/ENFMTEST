{"ast":null,"code":"import { getRequest, getCategories, saveRequest, assignRequest, getAssignations, getAnswers, updateAnswer } from '../api/request';\nimport { LIST_REQUEST, REQUEST_FAILURE, ASSIGNATIONS_LIST, LIST_ANSWERS } from '../store/types';\nexport const requestModule = {\n  state() {\n    return {\n      listRequest: [],\n      listAssignations: [],\n      categories: [],\n      message: ''\n    };\n  },\n  mutations: {\n    setRequest(state, data) {\n      state.listRequest = data;\n    },\n    setAssignation(state, data) {\n      state.listAssignations = data;\n    },\n    listCategories(state, data) {\n      state.categories = data;\n    },\n    setRequestFailure(state, data) {\n      state.message = data;\n    }\n  },\n  actions: {\n    async getRequests({\n      commit,\n      state\n    }) {\n      return new Promise(resovle => {\n        getRequest().then(response => {\n          commit(LIST_REQUEST, response.data);\n          setTimeout(() => {\n            resovle(state.listRequest);\n          }, 300);\n        }).catch(() => resovle([]));\n      });\n    },\n    async getAssignationList({\n      commit,\n      state\n    }) {\n      return new Promise(resovle => {\n        getAssignations().then(response => {\n          commit(ASSIGNATIONS_LIST, response.data);\n          setTimeout(() => {\n            resovle(state.listAssignations);\n          }, 300);\n        }).catch(() => resovle([]));\n      });\n    },\n    async getAllAnswers({\n      commit,\n      state\n    }) {\n      return new Promise(resovle => {\n        getAnswers().then(response => {\n          commit(LIST_ANSWERS, response.data);\n          setTimeout(() => {\n            resovle(state.listAssignations);\n          }, 300);\n        }).catch(() => resovle([]));\n      });\n    },\n    async getCategoriesList() {\n      return getCategories().then(response => response.data).catch(() => []);\n    },\n    async sentRequest({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        saveRequest(data).then(response => {\n          setTimeout(() => {\n            resolve(response);\n          }, 300);\n        }).catch(() => {\n          commit(REQUEST_FAILURE, 'Failed to save request.');\n          setTimeout(() => {\n            reject('error');\n          }, 300);\n        });\n      });\n    },\n    async saveAssignation({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        assignRequest(data).then(response => {\n          setTimeout(() => {\n            resolve(response);\n          }, 300);\n        }).catch(() => {\n          commit(REQUEST_FAILURE, 'Failed to add assignation.');\n          setTimeout(() => {\n            reject('error');\n          }, 300);\n        });\n      });\n    },\n    async approveAnswer({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        updateAnswer(data, data.id).then(response => {\n          setTimeout(() => {\n            resolve(response);\n          }, 300);\n        }).catch(() => {\n          commit(REQUEST_FAILURE, 'Failed. Cannot approve this answer.');\n          setTimeout(() => {\n            reject('error');\n          }, 300);\n        });\n      });\n    },\n    async sentAnswer({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        updateAnswer(data, data.id).then(response => {\n          setTimeout(() => {\n            resolve(response);\n          }, 300);\n        }).catch(() => {\n          commit(REQUEST_FAILURE, 'Failed. Cannot approve this answer.');\n          setTimeout(() => {\n            reject('error');\n          }, 300);\n        });\n      });\n    }\n  },\n  getters: {}\n};","map":{"version":3,"names":["getRequest","getCategories","saveRequest","assignRequest","getAssignations","getAnswers","updateAnswer","LIST_REQUEST","REQUEST_FAILURE","ASSIGNATIONS_LIST","LIST_ANSWERS","requestModule","state","listRequest","listAssignations","categories","message","mutations","setRequest","data","setAssignation","listCategories","setRequestFailure","actions","getRequests","commit","Promise","resovle","then","response","setTimeout","catch","getAssignationList","getAllAnswers","getCategoriesList","sentRequest","resolve","reject","saveAssignation","approveAnswer","id","sentAnswer","getters"],"sources":["C:/Users/HP/Desktop/Etisalat/client/src/store/request.module.js"],"sourcesContent":["import { getRequest, getCategories, saveRequest, assignRequest, getAssignations, getAnswers, updateAnswer } from '../api/request';\r\nimport { LIST_REQUEST, REQUEST_FAILURE, ASSIGNATIONS_LIST, LIST_ANSWERS } from '../store/types';\r\n\r\nexport const requestModule = {\r\n    state() {\r\n        return {\r\n            listRequest: [],\r\n            listAssignations:[],\r\n            categories: [],\r\n            message: ''\r\n        }\r\n    },\r\n    mutations: {\r\n        setRequest(state, data) {\r\n            state.listRequest = data\r\n        },\r\n        setAssignation(state, data) {\r\n            state.listAssignations = data\r\n        },\r\n        listCategories(state, data) {\r\n            state.categories = data\r\n        }\r\n        ,\r\n        setRequestFailure(state, data) {\r\n            state.message = data\r\n        }\r\n    },\r\n    actions: {\r\n        async getRequests({ commit, state }) {\r\n         return new Promise((resovle) => {\r\n            getRequest().then(response => {\r\n                    commit(LIST_REQUEST, response.data)\r\n                    setTimeout(()=> {\r\n                          resovle(state.listRequest);\r\n                    },300)\r\n               \r\n            }).catch(() => resovle([]))\r\n\r\n        })\r\n\r\n        },\r\n\r\n        async getAssignationList({ commit, state }) {\r\n            return new Promise((resovle) => {\r\n                getAssignations().then(response => {\r\n                       commit(ASSIGNATIONS_LIST, response.data)\r\n                       setTimeout(()=> {\r\n                             resovle(state.listAssignations);\r\n                       },300)\r\n                  \r\n               }).catch(() => resovle([]))\r\n   \r\n           })\r\n   \r\n           },\r\n\r\n           async getAllAnswers({ commit, state }) {\r\n            return new Promise((resovle) => {\r\n                getAnswers().then(response => {\r\n                       commit(LIST_ANSWERS, response.data)\r\n                       setTimeout(()=> {\r\n                             resovle(state.listAssignations);\r\n                       },300)\r\n                  \r\n               }).catch(() => resovle([]))\r\n   \r\n           })\r\n   \r\n           },\r\n\r\n        async getCategoriesList() {\r\n            return getCategories().then(response => response.data).catch(() => [])\r\n         },\r\n\r\n        async sentRequest({ commit }, data) {\r\n            return new Promise((resolve, reject) => {\r\n                saveRequest(data).then(response => {\r\n                    setTimeout(() => {\r\n                        resolve(response)\r\n                    }, 300);\r\n                }).catch(() => {\r\n\r\n                    commit(REQUEST_FAILURE, 'Failed to save request.');\r\n                    setTimeout(() => {\r\n                        reject('error')\r\n                    }, 300);\r\n\r\n                })\r\n            })\r\n\r\n        },\r\n\r\n        async saveAssignation({ commit }, data) {\r\n            return new Promise((resolve, reject) => {\r\n                assignRequest(data).then(response => {\r\n                    setTimeout(() => {\r\n                        resolve(response)\r\n                    }, 300);\r\n                }).catch(() => {\r\n\r\n                    commit(REQUEST_FAILURE, 'Failed to add assignation.');\r\n                    setTimeout(() => {\r\n                        reject('error')\r\n                    }, 300);\r\n\r\n                })\r\n            })\r\n\r\n        },\r\n\r\n        async approveAnswer({ commit }, data) {\r\n            return new Promise((resolve, reject) => {\r\n                updateAnswer(data, data.id).then(response => {\r\n                    setTimeout(() => {\r\n                        resolve(response)\r\n                    }, 300);\r\n                }).catch(() => {\r\n\r\n                    commit(REQUEST_FAILURE, 'Failed. Cannot approve this answer.');\r\n                    setTimeout(() => {\r\n                        reject('error')\r\n                    }, 300);\r\n\r\n                })\r\n            })\r\n\r\n        },\r\n\r\n        async sentAnswer({ commit }, data) {\r\n            return new Promise((resolve, reject) => {\r\n                updateAnswer(data, data.id).then(response => {\r\n                    setTimeout(() => {\r\n                        resolve(response)\r\n                    }, 300);\r\n                }).catch(() => {\r\n\r\n                    commit(REQUEST_FAILURE, 'Failed. Cannot approve this answer.');\r\n                    setTimeout(() => {\r\n                        reject('error')\r\n                    }, 300);\r\n\r\n                })\r\n            })\r\n\r\n        }\r\n    },\r\n\r\n    getters: {\r\n\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}