{"ast":null,"code":"import { TOKEN_USER, ISAUTHENTICATE, LOGIN_DATA, LOGIN_FAILURE } from './types';\nimport { login } from '../api/user';\nexport const userModule = {\n  state() {\n    return {\n      isAuthenticated: true,\n      token: '',\n      loginData: {},\n      message: ''\n    };\n  },\n  mutations: {\n    authenticate(state) {\n      state.isAuthenticated = !state.isAuthenticated;\n    },\n    updateLoginInput(state, inputName, value) {\n      switch (inputName) {\n        case 'email':\n          state.loginData.email = value;\n          break;\n        case 'password':\n          state.loginData.password = value;\n          break;\n        default:\n          break;\n      }\n    },\n    setToken(state, data) {\n      state.token = data.token;\n    },\n    setLoginData(state, data) {\n      state.loginData = data;\n    },\n    loginFailure(state, data) {\n      state.message = data;\n    }\n  },\n  actions: {\n    async loginUser({\n      commit\n    }, data) {\n      return new Promise((resolve, reject) => {\n        login(data).then(response => {\n          commit(TOKEN_USER, response.data.token);\n          commit(ISAUTHENTICATE);\n          commit(LOGIN_DATA, response.data);\n          setTimeout(() => {\n            resolve('success');\n          }, 300);\n        }).catch(err => {\n          console.log(err);\n          if (err.status === 401) {\n            commit(LOGIN_FAILURE, 'Credentials is incorrect.');\n          } else {\n            commit(LOGIN_FAILURE, 'Failed to login user.');\n          }\n          setTimeout(() => {\n            reject('error');\n          }, 300);\n        });\n      });\n    }\n  },\n  getters: {}\n};","map":{"version":3,"names":["TOKEN_USER","ISAUTHENTICATE","LOGIN_DATA","LOGIN_FAILURE","login","userModule","state","isAuthenticated","token","loginData","message","mutations","authenticate","updateLoginInput","inputName","value","email","password","setToken","data","setLoginData","loginFailure","actions","loginUser","commit","Promise","resolve","reject","then","response","setTimeout","catch","err","console","log","status","getters"],"sources":["C:/Users/HP/Desktop/Etisalat/client/src/store/user.module.js"],"sourcesContent":["import {TOKEN_USER, ISAUTHENTICATE, LOGIN_DATA,LOGIN_FAILURE} from './types';\r\nimport { login } from '../api/user';\r\n\r\nexport const userModule = {\r\n    state () {\r\n        return {\r\n            isAuthenticated: true,\r\n            token: '',\r\n            loginData:{ },\r\n            message:''\r\n        }\r\n        \r\n    },\r\n    mutations: {\r\n        authenticate(state) {\r\n            state.isAuthenticated = !state.isAuthenticated;\r\n        },\r\n        updateLoginInput (state,inputName, value) {\r\n            switch (inputName) {\r\n                case 'email' :\r\n                    state.loginData.email = value\r\n                    break;\r\n                case 'password':\r\n                    state.loginData.password = value\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n        },\r\n\r\n        setToken(state, data) {\r\n            state.token = data.token\r\n        },\r\n\r\n        setLoginData(state, data) {\r\n            state.loginData = data\r\n        },\r\n        loginFailure(state, data) {\r\n            state.message = data\r\n        }\r\n\r\n    },\r\n    actions: {\r\n       async loginUser ({ commit  }, data) {\r\n            return new Promise((resolve, reject) => {\r\n                login(data).then(response => {\r\n                    commit(TOKEN_USER, response.data.token)\r\n                    commit(ISAUTHENTICATE)\r\n                    commit(LOGIN_DATA, response.data)\r\n                    setTimeout(() => {\r\n                        resolve('success')\r\n                    },300);\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    if (err.status === 401) {\r\n                        commit(LOGIN_FAILURE, 'Credentials is incorrect.')\r\n                    } else {\r\n                        commit(LOGIN_FAILURE, 'Failed to login user.')\r\n                    }\r\n                    setTimeout(() => {\r\n                        reject('error')\r\n                    },300);\r\n\r\n                })\r\n            })\r\n      \r\n        }\r\n\r\n    },\r\n\r\n    getters : {\r\n     \r\n    }\r\n};"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,cAAc,EAAEC,UAAU,EAACC,aAAa,QAAO,SAAS;AAC5E,SAASC,KAAK,QAAQ,aAAa;AAEnC,OAAO,MAAMC,UAAU,GAAG;EACtBC,KAAKA,CAAA,EAAI;IACL,OAAO;MACHC,eAAe,EAAE,IAAI;MACrBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAC,CAAE,CAAC;MACbC,OAAO,EAAC;IACZ,CAAC;EAEL,CAAC;EACDC,SAAS,EAAE;IACPC,YAAYA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACC,eAAe,GAAG,CAACD,KAAK,CAACC,eAAe;IAClD,CAAC;IACDM,gBAAgBA,CAAEP,KAAK,EAACQ,SAAS,EAAEC,KAAK,EAAE;MACtC,QAAQD,SAAS;QACb,KAAK,OAAO;UACRR,KAAK,CAACG,SAAS,CAACO,KAAK,GAAGD,KAAK;UAC7B;QACJ,KAAK,UAAU;UACXT,KAAK,CAACG,SAAS,CAACQ,QAAQ,GAAGF,KAAK;UAChC;QACJ;UACI;MACR;IAEJ,CAAC;IAEDG,QAAQA,CAACZ,KAAK,EAAEa,IAAI,EAAE;MAClBb,KAAK,CAACE,KAAK,GAAGW,IAAI,CAACX,KAAK;IAC5B,CAAC;IAEDY,YAAYA,CAACd,KAAK,EAAEa,IAAI,EAAE;MACtBb,KAAK,CAACG,SAAS,GAAGU,IAAI;IAC1B,CAAC;IACDE,YAAYA,CAACf,KAAK,EAAEa,IAAI,EAAE;MACtBb,KAAK,CAACI,OAAO,GAAGS,IAAI;IACxB;EAEJ,CAAC;EACDG,OAAO,EAAE;IACN,MAAMC,SAASA,CAAE;MAAEC;IAAQ,CAAC,EAAEL,IAAI,EAAE;MAC/B,OAAO,IAAIM,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCvB,KAAK,CAACe,IAAI,CAAC,CAACS,IAAI,CAACC,QAAQ,IAAI;UACzBL,MAAM,CAACxB,UAAU,EAAE6B,QAAQ,CAACV,IAAI,CAACX,KAAK,CAAC;UACvCgB,MAAM,CAACvB,cAAc,CAAC;UACtBuB,MAAM,CAACtB,UAAU,EAAE2B,QAAQ,CAACV,IAAI,CAAC;UACjCW,UAAU,CAAC,MAAM;YACbJ,OAAO,CAAC,SAAS,CAAC;UACtB,CAAC,EAAC,GAAG,CAAC;QACV,CAAC,CAAC,CAACK,KAAK,CAACC,GAAG,IAAI;UACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChB,IAAIA,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;YACpBX,MAAM,CAACrB,aAAa,EAAE,2BAA2B,CAAC;UACtD,CAAC,MAAM;YACHqB,MAAM,CAACrB,aAAa,EAAE,uBAAuB,CAAC;UAClD;UACA2B,UAAU,CAAC,MAAM;YACbH,MAAM,CAAC,OAAO,CAAC;UACnB,CAAC,EAAC,GAAG,CAAC;QAEV,CAAC,CAAC;MACN,CAAC,CAAC;IAEN;EAEJ,CAAC;EAEDS,OAAO,EAAG,CAEV;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}