{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { format } from 'date-fns';\nimport { GET_REQUESTS, GET_CATEGORIES, GET_USERS } from '../store/types';\nexport default {\n  name: 'RequestComponent',\n  async created() {\n    this.requests = await this.$store.dispatch(GET_REQUESTS);\n    this.categories = await this.$store.dispatch(GET_CATEGORIES);\n    this.users = await this.$store.dispatch(GET_USERS);\n  },\n  data() {\n    return {\n      requests: [],\n      categories: [],\n      users: [],\n      currentUser: this.$store.state.user.loginData.user\n    };\n  },\n  methods: {\n    categoryName(id) {\n      return this.categories.filter(item => item.id === id).map(item => item ? item.name : '')[0];\n    },\n    userName(id) {\n      return this.users.filter(item => item.id === id).map(item => item ? item.firstname + ' ' + item.lastname : '')[0];\n    },\n    responseRequest(item) {\n      this.$router.push(`/admin/dashboard/requestResponses/${item.id}`);\n    },\n    formatDate(date) {\n      return format(date, \"yyyy-MM-dd\");\n    }\n  }\n};","map":{"version":3,"names":["format","GET_REQUESTS","GET_CATEGORIES","GET_USERS","name","created","requests","$store","dispatch","categories","users","data","currentUser","state","user","loginData","methods","categoryName","id","filter","item","map","userName","firstname","lastname","responseRequest","$router","push","formatDate","date"],"sources":["C:\\Users\\HP\\Desktop\\Etisalat\\client\\src\\modules\\Request.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container mt-5\">\r\n    <div className=\"admin_table\">\r\n      <table class=\"table\" >\r\n        <thead>\r\n          <tr class=\"table-secondary\">\r\n            <th scope=\"col\">Ticket</th>\r\n            <th scope=\"col\">Category</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Sender</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           <tr class=\"table-light\" v-for=\"item in requests\" :key=\"item.id\" >\r\n                    <td>\r\n                      <span class=\"fw-bold\" >{{item.title}}</span>\r\n                    </td>\r\n                    <td>{{categoryName(item.category_id) }}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>\r\n                      <span :class=\"{'badge bg-danger':item.status==='proccesing', 'badge bg-success':item.status==='done' }\">\r\n                        {{item.status}}\r\n                      </span> \r\n                      </td>\r\n                    <td>{{userName(item.user_id) }}</td>\r\n                    \r\n                    <td>{{item.date_request ? formatDate(item.date_request) : ''}}</td>\r\n                    <td>\r\n                        <button @click=\"responseRequest(item)\" :disabled=\"item.status==='proccesing'\" :class=\"{ 'btn btn-small btn-light':item.status==='proccesing' , \r\n                        'btn btn-small btn-secondary':item.status==='done' }\" >\r\n                            Responses\r\n                        </button>\r\n                    </td>\r\n               </tr> \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { format } from 'date-fns';\r\n\r\nimport { GET_REQUESTS , GET_CATEGORIES, GET_USERS} from '../store/types';\r\n\r\nexport default { \r\n  \r\n    name:'RequestComponent',\r\n    async created() { \r\n       this.requests = await this.$store.dispatch(GET_REQUESTS);\r\n       this.categories = await this.$store.dispatch(GET_CATEGORIES);\r\n       this.users = await this.$store.dispatch(GET_USERS);\r\n    },\r\n    data() {\r\n        return { \r\n            requests : [],\r\n            categories : [],\r\n            users: [],\r\n            currentUser: this.$store.state.user.loginData.user\r\n        }\r\n    },\r\n    methods : {\r\n        categoryName(id) {\r\n           return this.categories.filter(item => item.id === id).map(item=>item ? item.name : '')[0];\r\n        },\r\n         userName(id) {\r\n           return this.users.filter(item => item.id === id).map(item=>item ? item.firstname + ' ' + item.lastname : '')[0];\r\n        }\r\n        ,responseRequest(item) {\r\n            this.$router.push(`/admin/dashboard/requestResponses/${item.id}`);\r\n        },\r\n          formatDate(date) {\r\n                return format(date,\"yyyy-MM-dd\");\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";AA4CA,SAASA,MAAK,QAAS,UAAU;AAEjC,SAASC,YAAW,EAAIC,cAAc,EAAEC,SAAS,QAAO,gBAAgB;AAExE,eAAe;EAEXC,IAAI,EAAC,kBAAkB;EACvB,MAAMC,OAAOA,CAAA,EAAG;IACb,IAAI,CAACC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACP,YAAY,CAAC;IACxD,IAAI,CAACQ,UAAS,GAAI,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAACN,cAAc,CAAC;IAC5D,IAAI,CAACQ,KAAI,GAAI,MAAM,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACL,SAAS,CAAC;EACrD,CAAC;EACDQ,IAAIA,CAAA,EAAG;IACH,OAAO;MACHL,QAAO,EAAI,EAAE;MACbG,UAAS,EAAI,EAAE;MACfC,KAAK,EAAE,EAAE;MACTE,WAAW,EAAE,IAAI,CAACL,MAAM,CAACM,KAAK,CAACC,IAAI,CAACC,SAAS,CAACD;IAClD;EACJ,CAAC;EACDE,OAAM,EAAI;IACNC,YAAYA,CAACC,EAAE,EAAE;MACd,OAAO,IAAI,CAACT,UAAU,CAACU,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACF,EAAC,KAAMA,EAAE,CAAC,CAACG,GAAG,CAACD,IAAI,IAAEA,IAAG,GAAIA,IAAI,CAAChB,IAAG,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IACAkB,QAAQA,CAACJ,EAAE,EAAE;MACX,OAAO,IAAI,CAACR,KAAK,CAACS,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACF,EAAC,KAAMA,EAAE,CAAC,CAACG,GAAG,CAACD,IAAI,IAAEA,IAAG,GAAIA,IAAI,CAACG,SAAQ,GAAI,GAAE,GAAIH,IAAI,CAACI,QAAO,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAClH;IACCC,eAAeA,CAACL,IAAI,EAAE;MACnB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAE,qCAAoCP,IAAI,CAACF,EAAG,EAAC,CAAC;IACrE,CAAC;IACCU,UAAUA,CAACC,IAAI,EAAE;MACX,OAAO7B,MAAM,CAAC6B,IAAI,EAAC,YAAY,CAAC;IACxC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}