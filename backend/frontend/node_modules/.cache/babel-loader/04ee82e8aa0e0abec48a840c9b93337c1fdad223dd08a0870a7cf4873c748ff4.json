{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ADD_ASSIGNATION, GET_ASSIGNATIONS, GET_USERS, GET_REQUESTS } from \"../store/types\";\nexport default {\n  name: \"AddAssignationComponent\",\n  async created() {\n    this.assignations = await this.$store.dispatch(GET_ASSIGNATIONS);\n    this.users = await this.$store.dispatch(GET_USERS);\n    this.requests = await this.$store.dispatch(GET_REQUESTS);\n    const userId = this.$store.state.user.loginData.user.id;\n    if (this.assignations && this.assignations.length) {\n      this.assignations = this.assignations.filter(item => item.user_id === userId);\n    }\n    if (this.requests && this.requests.length) {\n      this.assignations.map(assign => {\n        this.requests = this.requests.filter(item => item.status === 'proccesing' && assign.request_id !== item.id);\n      });\n    }\n    if (this.users && this.users.length) {\n      this.users = this.users.filter(item => item.role_id === 3);\n    }\n  },\n  data() {\n    return {\n      request_id: \"\",\n      user_id: \"\",\n      comment: \"\",\n      assignError: \"\",\n      loading: false,\n      users: [],\n      requests: []\n    };\n  },\n  methods: {\n    saveAssignRequest(e) {\n      e.preventDefault();\n      this.loading = true;\n      const data = {\n        request_id: this.request_id,\n        user_id: this.user_id,\n        comment: this.comment\n      };\n      this.$store.dispatch(ADD_ASSIGNATION, data).then(data => {\n        this.loading = false;\n        if (data.status === \"success\") {\n          this.$router.push(\"/admin/dashboard/assignations\");\n        }\n      }).catch(data => {\n        this.loading = false;\n        if (data === \"error\") {\n          this.assignError = this.$store.state.request.message;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ADD_ASSIGNATION","GET_ASSIGNATIONS","GET_USERS","GET_REQUESTS","name","created","assignations","$store","dispatch","users","requests","userId","state","user","loginData","id","length","filter","item","user_id","map","assign","status","request_id","role_id","data","comment","assignError","loading","methods","saveAssignRequest","e","preventDefault","then","$router","push","catch","request","message"],"sources":["C:\\Users\\HP\\Desktop\\Etisalat\\client\\src\\modules\\AddAssignation.vue"],"sourcesContent":["\r\n<template>\r\n  <form class=\"m-10 p-5\">\r\n    <div class=\"mb-4\">\r\n      <h3 class=\"text-dark\">ASSIGN REQUEST</h3>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <p class=\"alert alert-danger\" v-show=\"assignError\">{{ assignError }}</p>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <select class=\"form-control\" id=\"#request\" v-model=\"request_id\">\r\n        <option for=\"request\" value=\"\" :disabled=\"true\">\r\n          Select Request\r\n        </option>\r\n        <option for=\"request\" v-for=\"req in requests\" :key=\"req.id\" :value=\"req.id\">\r\n          {{ req.description }} \r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <select class=\"form-control\" id=\"#it\" v-model=\"user_id\">\r\n        <option for=\"it\" value=\"\" :disabled=\"true\">\r\n          Select IT\r\n        </option>\r\n        <option for=\"it\" v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\">\r\n          {{ user.firstname }}  {{ user.lastname }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <textarea\r\n        rows=\"3\"\r\n        v-model=\"comment\"\r\n        class=\"form-control\"\r\n        id=\"passwordInput\"\r\n        placeholder=\"Enter a comment\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <button\r\n        :disabled=\"loading\"\r\n        @click=\"saveAssignRequest\"\r\n        class=\"btn btn-lg btn-dark\"\r\n        type=\"button\"\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ADD_ASSIGNATION,GET_ASSIGNATIONS, GET_USERS, GET_REQUESTS } from \"../store/types\";\r\n\r\nexport default {\r\n  name: \"AddAssignationComponent\",\r\n   async created() {\r\n\r\n     this.assignations = await this.$store.dispatch(GET_ASSIGNATIONS);\r\n     this.users = await this.$store.dispatch(GET_USERS);\r\n     this.requests = await this.$store.dispatch(GET_REQUESTS);\r\n    \r\n\r\n       const userId = this.$store.state.user.loginData.user.id;\r\n      if (this.assignations &&  this.assignations.length) {\r\n         this.assignations = this.assignations.filter(item => item.user_id === userId);\r\n      }\r\n\r\n     if (this.requests &&  this.requests.length) {\r\n         this.assignations.map((assign) => {\r\n                this.requests = this.requests.filter(item => item.status === 'proccesing' && assign.request_id !== item.id );\r\n         });\r\n     }\r\n\r\n      if (this.users &&  this.users.length) {\r\n         this.users = this.users.filter(item => item.role_id === 3);\r\n      }\r\n  },\r\n  data() {\r\n    return {\r\n      request_id: \"\",\r\n      user_id: \"\",\r\n      comment: \"\",\r\n      assignError: \"\",\r\n      loading: false,\r\n      users: [],\r\n      requests: []\r\n    };\r\n  },\r\n  methods: {\r\n    saveAssignRequest(e) {\r\n      e.preventDefault();\r\n      this.loading = true;\r\n      const data = {\r\n        request_id: this.request_id,\r\n        user_id: this.user_id,\r\n        comment: this.comment\r\n      };\r\n      this.$store\r\n        .dispatch(ADD_ASSIGNATION, data)\r\n        .then((data) => {\r\n          this.loading = false;\r\n          if (data.status === \"success\") {\r\n            this.$router.push(\"/admin/dashboard/assignations\");\r\n          }\r\n        })\r\n        .catch((data) => {\r\n          this.loading = false;\r\n          if (data === \"error\") {\r\n            this.assignError = this.$store.state.request.message;\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";AAwDA,SAASA,eAAe,EAACC,gBAAgB,EAAEC,SAAS,EAAEC,YAAW,QAAS,gBAAgB;AAE1F,eAAe;EACbC,IAAI,EAAE,yBAAyB;EAC9B,MAAMC,OAAOA,CAAA,EAAG;IAEd,IAAI,CAACC,YAAW,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACP,gBAAgB,CAAC;IAChE,IAAI,CAACQ,KAAI,GAAI,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAACN,SAAS,CAAC;IAClD,IAAI,CAACQ,QAAO,GAAI,MAAM,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACL,YAAY,CAAC;IAGtD,MAAMQ,MAAK,GAAI,IAAI,CAACJ,MAAM,CAACK,KAAK,CAACC,IAAI,CAACC,SAAS,CAACD,IAAI,CAACE,EAAE;IACxD,IAAI,IAAI,CAACT,YAAW,IAAM,IAAI,CAACA,YAAY,CAACU,MAAM,EAAE;MACjD,IAAI,CAACV,YAAW,GAAI,IAAI,CAACA,YAAY,CAACW,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,OAAM,KAAMR,MAAM,CAAC;IAChF;IAED,IAAI,IAAI,CAACD,QAAO,IAAM,IAAI,CAACA,QAAQ,CAACM,MAAM,EAAE;MACxC,IAAI,CAACV,YAAY,CAACc,GAAG,CAAEC,MAAM,IAAK;QAC3B,IAAI,CAACX,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACO,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACI,MAAK,KAAM,YAAW,IAAKD,MAAM,CAACE,UAAS,KAAML,IAAI,CAACH,EAAG,CAAC;MACnH,CAAC,CAAC;IACN;IAEC,IAAI,IAAI,CAACN,KAAI,IAAM,IAAI,CAACA,KAAK,CAACO,MAAM,EAAE;MACnC,IAAI,CAACP,KAAI,GAAI,IAAI,CAACA,KAAK,CAACQ,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACM,OAAM,KAAM,CAAC,CAAC;IAC7D;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLF,UAAU,EAAE,EAAE;MACdJ,OAAO,EAAE,EAAE;MACXO,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,KAAK;MACdnB,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDmB,OAAO,EAAE;IACPC,iBAAiBA,CAACC,CAAC,EAAE;MACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAI,CAACJ,OAAM,GAAI,IAAI;MACnB,MAAMH,IAAG,GAAI;QACXF,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BJ,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBO,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC;MACD,IAAI,CAACnB,MAAK,CACPC,QAAQ,CAACR,eAAe,EAAEyB,IAAI,EAC9BQ,IAAI,CAAER,IAAI,IAAK;QACd,IAAI,CAACG,OAAM,GAAI,KAAK;QACpB,IAAIH,IAAI,CAACH,MAAK,KAAM,SAAS,EAAE;UAC7B,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,+BAA+B,CAAC;QACpD;MACF,CAAC,EACAC,KAAK,CAAEX,IAAI,IAAK;QACf,IAAI,CAACG,OAAM,GAAI,KAAK;QACpB,IAAIH,IAAG,KAAM,OAAO,EAAE;UACpB,IAAI,CAACE,WAAU,GAAI,IAAI,CAACpB,MAAM,CAACK,KAAK,CAACyB,OAAO,CAACC,OAAO;QACtD;MACF,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}