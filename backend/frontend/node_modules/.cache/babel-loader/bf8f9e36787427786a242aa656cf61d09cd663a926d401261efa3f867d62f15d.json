{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { SENT_ANSWER } from \"../store/types\";\nimport router from '../routes';\nimport { onMounted, ref, watchEffect } from 'vue';\nimport store from '../store';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'SentAnswer',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const assignation_id = ref(\"\");\n    const description = ref(\"\");\n    const answerError = ref(\"\");\n    const loading = ref(false);\n    onMounted(() => {\n      assignation_id.value = route.params.id;\n    });\n    // execute when request reassign \n    watchEffect(() => route.params.id, async newId => {\n      if (newId) {\n        console.log(newId);\n        assignation_id.value = route.params.id;\n      }\n    });\n    function sentAnswerRequest() {\n      loading.value = true;\n      const data = {\n        assignation_id: assignation_id.value,\n        description: description.value\n      };\n      store.dispatch(SENT_ANSWER, data).then(data => {\n        loading.value = false;\n        if (data.status === \"success\") {\n          router.push(\"/admin/dashboard/assignations\");\n        }\n      }).catch(data => {\n        loading.value = false;\n        if (data === \"error\") {\n          answerError.value = store.state.request.message;\n        }\n      });\n    }\n    const __returned__ = {\n      route,\n      assignation_id,\n      description,\n      answerError,\n      loading,\n      sentAnswerRequest,\n      get SENT_ANSWER() {\n        return SENT_ANSWER;\n      },\n      get router() {\n        return router;\n      },\n      onMounted,\n      ref,\n      watchEffect,\n      get store() {\n        return store;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["SENT_ANSWER","router","onMounted","ref","watchEffect","store","useRoute","route","assignation_id","description","answerError","loading","value","params","id","newId","console","log","sentAnswerRequest","data","dispatch","then","status","push","catch","state","request","message"],"sources":["C:/Users/HP/Desktop/ENFM/Customer_v2/client/src/views/SentAnswer.vue"],"sourcesContent":["\r\n<script setup>\r\nimport { SENT_ANSWER } from \"../store/types\"\r\n\r\nimport router from '../routes'\r\nimport { onMounted, ref, watchEffect } from 'vue'\r\nimport store from '../store'\r\nimport { useRoute } from 'vue-router'\r\n\r\nconst route = useRoute()\r\nconst assignation_id = ref(\"\")\r\nconst description = ref(\"\")\r\nconst answerError = ref(\"\")\r\nconst loading = ref(false)\r\n\r\n\r\n    onMounted(() => {\r\n      assignation_id.value = route.params.id;\r\n    })\r\n    // execute when request reassign \r\n     watchEffect(() => route.params.id,\r\n      async newId => {\r\n      if (newId) {\r\n          console.log(newId);\r\n          assignation_id.value = route.params.id;\r\n      }\r\n\r\n      })\r\n\r\n  function sentAnswerRequest() {\r\n      loading.value = true;\r\n      const data = {\r\n        assignation_id: assignation_id.value,\r\n        description: description.value\r\n      };\r\n        store\r\n        .dispatch(SENT_ANSWER, data)\r\n        .then((data) => {\r\n          loading.value = false;\r\n          if (data.status === \"success\") {\r\n            router.push(\"/admin/dashboard/assignations\");\r\n          }\r\n        })\r\n        .catch((data) => {\r\n          loading.value = false;\r\n          if (data === \"error\") {\r\n            answerError.value = store.state.request.message;\r\n          }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<template>\r\n  <form class=\"m-10 p-5\">\r\n    <div class=\"mb-4\">\r\n      <h3 class=\"text-dark\">ANSWER REQUEST</h3>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <p class=\"alert alert-danger\" v-show=\"answerError\">{{ answerError }}</p>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <textarea\r\n        rows=\"5\"\r\n        v-model=\"description\"\r\n        class=\"form-control\"\r\n        id=\"passwordInput\"\r\n        placeholder=\"Enter a answer\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <button\r\n        :disabled=\"loading\"\r\n        @click.prevent=\"sentAnswerRequest\"\r\n       :class=\"{'btn btn-lg btn-dark':!loading,'btn btn-lg btn-danger':loading}\"\r\n        type=\"button\"\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</template>\r\n"],"mappings":";AAEA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,SAAS,EAAEC,GAAG,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IAErC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,cAAc,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMM,WAAW,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMO,WAAW,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,OAAO,GAAGR,GAAG,CAAC,KAAK,CAAC;IAGtBD,SAAS,CAAC,MAAM;MACdM,cAAc,CAACI,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACC,EAAE;IACxC,CAAC,CAAC;IACF;IACCV,WAAW,CAAC,MAAMG,KAAK,CAACM,MAAM,CAACC,EAAE,EAChC,MAAMC,KAAK,IAAI;MACf,IAAIA,KAAK,EAAE;QACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBP,cAAc,CAACI,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACC,EAAE;MAC1C;IAEA,CAAC,CAAC;IAEN,SAASI,iBAAiBA,CAAA,EAAG;MACzBP,OAAO,CAACC,KAAK,GAAG,IAAI;MACpB,MAAMO,IAAI,GAAG;QACXX,cAAc,EAAEA,cAAc,CAACI,KAAK;QACpCH,WAAW,EAAEA,WAAW,CAACG;MAC3B,CAAC;MACCP,KAAK,CACJe,QAAQ,CAACpB,WAAW,EAAEmB,IAAI,CAAC,CAC3BE,IAAI,CAAEF,IAAI,IAAK;QACdR,OAAO,CAACC,KAAK,GAAG,KAAK;QACrB,IAAIO,IAAI,CAACG,MAAM,KAAK,SAAS,EAAE;UAC7BrB,MAAM,CAACsB,IAAI,CAAC,+BAA+B,CAAC;QAC9C;MACF,CAAC,CAAC,CACDC,KAAK,CAAEL,IAAI,IAAK;QACfR,OAAO,CAACC,KAAK,GAAG,KAAK;QACrB,IAAIO,IAAI,KAAK,OAAO,EAAE;UACpBT,WAAW,CAACE,KAAK,GAAGP,KAAK,CAACoB,KAAK,CAACC,OAAO,CAACC,OAAO;QACjD;MACF,CAAC,CAAC;IACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}